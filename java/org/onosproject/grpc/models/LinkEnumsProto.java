// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LinkEnumsProto.proto

package org.onosproject.grpc.models;

public final class LinkEnumsProto {
  private LinkEnumsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code proto.LinkTypeProto}
   */
  public enum LinkTypeProto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Signifies that this is a direct single-segment link.
     * </pre>
     *
     * <code>DIRECT = 0;</code>
     */
    DIRECT(0),
    /**
     * <pre>
     * Signifies that this link is potentially comprised from multiple
     * underlying segments or hops, and as such should be used to tag
     * links traversing optical paths, tunnels or intervening 'dark'
     * switches.
     * </pre>
     *
     * <code>INDIRECT = 1;</code>
     */
    INDIRECT(1),
    /**
     * <pre>
     * Signifies that this link is an edge, i.e. host link.
     * </pre>
     *
     * <code>EDGE = 2;</code>
     */
    EDGE(2),
    /**
     * <pre>
     * Signifies that this link represents a logical link backed by
     * some form of a tunnel, e.g., GRE, MPLS, ODUk, OCH.
     * </pre>
     *
     * <code>TUNNEL = 3;</code>
     */
    TUNNEL(3),
    /**
     * <pre>
     * Signifies that this link is realized by fiber (either single channel or WDM).
     * </pre>
     *
     * <code>OPTICAL = 4;</code>
     */
    OPTICAL(4),
    /**
     * <pre>
     * Signifies that this link is a virtual link or a pseudo-wire.
     * </pre>
     *
     * <code>VIRTUAL = 5;</code>
     */
    VIRTUAL(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Signifies that this is a direct single-segment link.
     * </pre>
     *
     * <code>DIRECT = 0;</code>
     */
    public static final int DIRECT_VALUE = 0;
    /**
     * <pre>
     * Signifies that this link is potentially comprised from multiple
     * underlying segments or hops, and as such should be used to tag
     * links traversing optical paths, tunnels or intervening 'dark'
     * switches.
     * </pre>
     *
     * <code>INDIRECT = 1;</code>
     */
    public static final int INDIRECT_VALUE = 1;
    /**
     * <pre>
     * Signifies that this link is an edge, i.e. host link.
     * </pre>
     *
     * <code>EDGE = 2;</code>
     */
    public static final int EDGE_VALUE = 2;
    /**
     * <pre>
     * Signifies that this link represents a logical link backed by
     * some form of a tunnel, e.g., GRE, MPLS, ODUk, OCH.
     * </pre>
     *
     * <code>TUNNEL = 3;</code>
     */
    public static final int TUNNEL_VALUE = 3;
    /**
     * <pre>
     * Signifies that this link is realized by fiber (either single channel or WDM).
     * </pre>
     *
     * <code>OPTICAL = 4;</code>
     */
    public static final int OPTICAL_VALUE = 4;
    /**
     * <pre>
     * Signifies that this link is a virtual link or a pseudo-wire.
     * </pre>
     *
     * <code>VIRTUAL = 5;</code>
     */
    public static final int VIRTUAL_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LinkTypeProto valueOf(int value) {
      return forNumber(value);
    }

    public static LinkTypeProto forNumber(int value) {
      switch (value) {
        case 0: return DIRECT;
        case 1: return INDIRECT;
        case 2: return EDGE;
        case 3: return TUNNEL;
        case 4: return OPTICAL;
        case 5: return VIRTUAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LinkTypeProto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LinkTypeProto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LinkTypeProto>() {
            public LinkTypeProto findValueByNumber(int number) {
              return LinkTypeProto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.onosproject.grpc.models.LinkEnumsProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final LinkTypeProto[] VALUES = values();

    public static LinkTypeProto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LinkTypeProto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.LinkTypeProto)
  }

  /**
   * Protobuf enum {@code proto.LinkStateProto}
   */
  public enum LinkStateProto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ACTIVE_LINK = 0;</code>
     */
    ACTIVE_LINK(0),
    /**
     * <code>INACTIVE_LINK = 1;</code>
     */
    INACTIVE_LINK(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>ACTIVE_LINK = 0;</code>
     */
    public static final int ACTIVE_LINK_VALUE = 0;
    /**
     * <code>INACTIVE_LINK = 1;</code>
     */
    public static final int INACTIVE_LINK_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LinkStateProto valueOf(int value) {
      return forNumber(value);
    }

    public static LinkStateProto forNumber(int value) {
      switch (value) {
        case 0: return ACTIVE_LINK;
        case 1: return INACTIVE_LINK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LinkStateProto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LinkStateProto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LinkStateProto>() {
            public LinkStateProto findValueByNumber(int number) {
              return LinkStateProto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.onosproject.grpc.models.LinkEnumsProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final LinkStateProto[] VALUES = values();

    public static LinkStateProto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LinkStateProto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.LinkStateProto)
  }

  /**
   * <pre>
   * Link Event Types
   * </pre>
   *
   * Protobuf enum {@code proto.LinkEventTypeProto}
   */
  public enum LinkEventTypeProto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>LINK_ADDED = 0;</code>
     */
    LINK_ADDED(0),
    /**
     * <code>LINK_UPDATED = 1;</code>
     */
    LINK_UPDATED(1),
    /**
     * <code>LINK_REMOVED = 2;</code>
     */
    LINK_REMOVED(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>LINK_ADDED = 0;</code>
     */
    public static final int LINK_ADDED_VALUE = 0;
    /**
     * <code>LINK_UPDATED = 1;</code>
     */
    public static final int LINK_UPDATED_VALUE = 1;
    /**
     * <code>LINK_REMOVED = 2;</code>
     */
    public static final int LINK_REMOVED_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LinkEventTypeProto valueOf(int value) {
      return forNumber(value);
    }

    public static LinkEventTypeProto forNumber(int value) {
      switch (value) {
        case 0: return LINK_ADDED;
        case 1: return LINK_UPDATED;
        case 2: return LINK_REMOVED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LinkEventTypeProto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LinkEventTypeProto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LinkEventTypeProto>() {
            public LinkEventTypeProto findValueByNumber(int number) {
              return LinkEventTypeProto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.onosproject.grpc.models.LinkEnumsProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final LinkEventTypeProto[] VALUES = values();

    public static LinkEventTypeProto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LinkEventTypeProto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.LinkEventTypeProto)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024LinkEnumsProto.proto\022\005proto*Y\n\rLinkTyp" +
      "eProto\022\n\n\006DIRECT\020\000\022\014\n\010INDIRECT\020\001\022\010\n\004EDGE" +
      "\020\002\022\n\n\006TUNNEL\020\003\022\013\n\007OPTICAL\020\004\022\013\n\007VIRTUAL\020\005" +
      "*4\n\016LinkStateProto\022\017\n\013ACTIVE_LINK\020\000\022\021\n\rI" +
      "NACTIVE_LINK\020\001*H\n\022LinkEventTypeProto\022\016\n\n" +
      "LINK_ADDED\020\000\022\020\n\014LINK_UPDATED\020\001\022\020\n\014LINK_R" +
      "EMOVED\020\002B\035\n\033org.onosproject.grpc.modelsb" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}

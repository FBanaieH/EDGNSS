// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FlowEntryEnumsProto.proto

package org.onosproject.grpc.models;

public final class FlowEntryEnumsProto {
  private FlowEntryEnumsProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Corresponds to org.onosproject.net.flow.FlowEntry.
   * </pre>
   *
   * Protobuf enum {@code proto.FlowEntryStateProto}
   */
  public enum FlowEntryStateProto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Indicates that this rule has been submitted for addition.
     * Not necessarily in the flow table.
     * </pre>
     *
     * <code>PENDING_ADD_FLOW = 0;</code>
     */
    PENDING_ADD_FLOW(0),
    /**
     * <pre>
     * Rule has been added which means it is in the flow table.
     * </pre>
     *
     * <code>ADDED_FLOW = 1;</code>
     */
    ADDED_FLOW(1),
    /**
     * <pre>
     * Flow has been marked for removal, might still be in flow table.
     * </pre>
     *
     * <code>PENDING_REMOVE_FLOW = 2;</code>
     */
    PENDING_REMOVE_FLOW(2),
    /**
     * <pre>
     * Flow has been removed from flow table and can be purged.
     * </pre>
     *
     * <code>REMOVED_FLOW = 3;</code>
     */
    REMOVED_FLOW(3),
    /**
     * <pre>
     * Indicates that the installation of this flow has failed.
     * </pre>
     *
     * <code>FAILED_FLOW = 4;</code>
     */
    FAILED_FLOW(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Indicates that this rule has been submitted for addition.
     * Not necessarily in the flow table.
     * </pre>
     *
     * <code>PENDING_ADD_FLOW = 0;</code>
     */
    public static final int PENDING_ADD_FLOW_VALUE = 0;
    /**
     * <pre>
     * Rule has been added which means it is in the flow table.
     * </pre>
     *
     * <code>ADDED_FLOW = 1;</code>
     */
    public static final int ADDED_FLOW_VALUE = 1;
    /**
     * <pre>
     * Flow has been marked for removal, might still be in flow table.
     * </pre>
     *
     * <code>PENDING_REMOVE_FLOW = 2;</code>
     */
    public static final int PENDING_REMOVE_FLOW_VALUE = 2;
    /**
     * <pre>
     * Flow has been removed from flow table and can be purged.
     * </pre>
     *
     * <code>REMOVED_FLOW = 3;</code>
     */
    public static final int REMOVED_FLOW_VALUE = 3;
    /**
     * <pre>
     * Indicates that the installation of this flow has failed.
     * </pre>
     *
     * <code>FAILED_FLOW = 4;</code>
     */
    public static final int FAILED_FLOW_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FlowEntryStateProto valueOf(int value) {
      return forNumber(value);
    }

    public static FlowEntryStateProto forNumber(int value) {
      switch (value) {
        case 0: return PENDING_ADD_FLOW;
        case 1: return ADDED_FLOW;
        case 2: return PENDING_REMOVE_FLOW;
        case 3: return REMOVED_FLOW;
        case 4: return FAILED_FLOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FlowEntryStateProto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FlowEntryStateProto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FlowEntryStateProto>() {
            public FlowEntryStateProto findValueByNumber(int number) {
              return FlowEntryStateProto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.onosproject.grpc.models.FlowEntryEnumsProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final FlowEntryStateProto[] VALUES = values();

    public static FlowEntryStateProto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FlowEntryStateProto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.FlowEntryStateProto)
  }

  /**
   * Protobuf enum {@code proto.FlowLiveTypeProto}
   */
  public enum FlowLiveTypeProto
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Indicates that this rule has been submitted for addition immediately.
     * Not necessarily collecting flow stats.
     * </pre>
     *
     * <code>IMMEDIATE_FLOW = 0;</code>
     */
    IMMEDIATE_FLOW(0),
    /**
     * <pre>
     * Indicates that this rule has been submitted for a short time.
     * Collecting flow stats every SHORT interval, defined by the implementation.
     * </pre>
     *
     * <code>SHORT_FLOW = 1;</code>
     */
    SHORT_FLOW(1),
    /**
     * <pre>
     * Indicates that this rule has been submitted for a mid time.
     * Collecting flow stats every MID interval, defined by the implementation.
     * </pre>
     *
     * <code>MID_FLOW = 2;</code>
     */
    MID_FLOW(2),
    /**
     * <pre>
     * Indicates that this rule has been submitted for a long time.
     * Collecting flow stats every LONG interval, defined by the implementation.
     * </pre>
     *
     * <code>FLONG_FLOW = 3;</code>
     */
    FLONG_FLOW(3),
    /**
     * <pre>
     * Indicates that this rule has been submitted for UNKNOWN or ERROR.
     * Not necessarily collecting flow stats.
     * </pre>
     *
     * <code>UNKNOWN_FLOW = 4;</code>
     */
    UNKNOWN_FLOW(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Indicates that this rule has been submitted for addition immediately.
     * Not necessarily collecting flow stats.
     * </pre>
     *
     * <code>IMMEDIATE_FLOW = 0;</code>
     */
    public static final int IMMEDIATE_FLOW_VALUE = 0;
    /**
     * <pre>
     * Indicates that this rule has been submitted for a short time.
     * Collecting flow stats every SHORT interval, defined by the implementation.
     * </pre>
     *
     * <code>SHORT_FLOW = 1;</code>
     */
    public static final int SHORT_FLOW_VALUE = 1;
    /**
     * <pre>
     * Indicates that this rule has been submitted for a mid time.
     * Collecting flow stats every MID interval, defined by the implementation.
     * </pre>
     *
     * <code>MID_FLOW = 2;</code>
     */
    public static final int MID_FLOW_VALUE = 2;
    /**
     * <pre>
     * Indicates that this rule has been submitted for a long time.
     * Collecting flow stats every LONG interval, defined by the implementation.
     * </pre>
     *
     * <code>FLONG_FLOW = 3;</code>
     */
    public static final int FLONG_FLOW_VALUE = 3;
    /**
     * <pre>
     * Indicates that this rule has been submitted for UNKNOWN or ERROR.
     * Not necessarily collecting flow stats.
     * </pre>
     *
     * <code>UNKNOWN_FLOW = 4;</code>
     */
    public static final int UNKNOWN_FLOW_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static FlowLiveTypeProto valueOf(int value) {
      return forNumber(value);
    }

    public static FlowLiveTypeProto forNumber(int value) {
      switch (value) {
        case 0: return IMMEDIATE_FLOW;
        case 1: return SHORT_FLOW;
        case 2: return MID_FLOW;
        case 3: return FLONG_FLOW;
        case 4: return UNKNOWN_FLOW;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<FlowLiveTypeProto>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        FlowLiveTypeProto> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<FlowLiveTypeProto>() {
            public FlowLiveTypeProto findValueByNumber(int number) {
              return FlowLiveTypeProto.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.onosproject.grpc.models.FlowEntryEnumsProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final FlowLiveTypeProto[] VALUES = values();

    public static FlowLiveTypeProto valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private FlowLiveTypeProto(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.FlowLiveTypeProto)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031FlowEntryEnumsProto.proto\022\005proto*w\n\023Fl" +
      "owEntryStateProto\022\024\n\020PENDING_ADD_FLOW\020\000\022" +
      "\016\n\nADDED_FLOW\020\001\022\027\n\023PENDING_REMOVE_FLOW\020\002" +
      "\022\020\n\014REMOVED_FLOW\020\003\022\017\n\013FAILED_FLOW\020\004*g\n\021F" +
      "lowLiveTypeProto\022\022\n\016IMMEDIATE_FLOW\020\000\022\016\n\n" +
      "SHORT_FLOW\020\001\022\014\n\010MID_FLOW\020\002\022\016\n\nFLONG_FLOW" +
      "\020\003\022\020\n\014UNKNOWN_FLOW\020\004B\035\n\033org.onosproject." +
      "grpc.modelsb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
